// <auto-generated />
using System;
using CarDeadlineTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDeadlineTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("CarDeadlineTracker.Model.Car", b =>
                {
                    b.Property<string>("NumberPlate")
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NumberPlate");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarNumberPlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RenewalCost")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RenewalDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarNumberPlate");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarNumberPlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaintenanceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NextMaintenanceDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarNumberPlate");

                    b.ToTable("MaintenanceRecords");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.RepairLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarNumberPlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RepairDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarNumberPlate");

                    b.ToTable("RepairLogs");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.Document", b =>
                {
                    b.HasOne("CarDeadlineTracker.Model.Car", "Car")
                        .WithMany("Documents")
                        .HasForeignKey("CarNumberPlate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.MaintenanceRecord", b =>
                {
                    b.HasOne("CarDeadlineTracker.Model.Car", "Car")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("CarNumberPlate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.RepairLog", b =>
                {
                    b.HasOne("CarDeadlineTracker.Model.Car", "Car")
                        .WithMany("RepairLogs")
                        .HasForeignKey("CarNumberPlate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.Car", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("MaintenanceRecords");

                    b.Navigation("RepairLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
