// <auto-generated />
using System;
using CarDeadlineTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDeadlineTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251002082205_idk")]
    partial class idk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("CarDeadlineTracker.Model.Car", b =>
                {
                    b.Property<string>("NumberPlate")
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Mileage")
                        .HasColumnType("INTEGER");

                    b.HasKey("NumberPlate");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.RenewalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarNumberPlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfExpiry")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfRenewal")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarNumberPlate");

                    b.ToTable("RenewalItems");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.RepairLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarNumberPlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RepairDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarNumberPlate");

                    b.ToTable("RepairLogs");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.RenewalItem", b =>
                {
                    b.HasOne("CarDeadlineTracker.Model.Car", "Car")
                        .WithMany("RenewalItems")
                        .HasForeignKey("CarNumberPlate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.RepairLog", b =>
                {
                    b.HasOne("CarDeadlineTracker.Model.Car", "Car")
                        .WithMany("RepairLogs")
                        .HasForeignKey("CarNumberPlate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarDeadlineTracker.Model.Car", b =>
                {
                    b.Navigation("RenewalItems");

                    b.Navigation("RepairLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
